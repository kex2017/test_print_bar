/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_SCTM_PB_H_INCLUDED
#define PB_SCTM_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _node_info_req_t {
    int64_t timestamp;
    int32_t node_id;
    float temperature;
    int32_t error_code;
/* @@protoc_insertion_point(struct:node_info_req_t) */
} node_info_req_t;


typedef struct _node_info_rsp_t {
    int64_t timestamp;
    int32_t node_id;
/* @@protoc_insertion_point(struct:node_info_rsp_t) */
} node_info_rsp_t;


typedef struct _Transfer {
    node_info_req_t node_info_req;
    node_info_rsp_t node_info_rsp;
/* @@protoc_insertion_point(struct:Transfer) */
} Transfer;


/* Initializer values for message structs */
#define Transfer_init_default                    {node_info_req_t_init_default, node_info_rsp_t_init_default}
#define node_info_req_t_init_default             {0, 0, 0, 0}
#define node_info_rsp_t_init_default             {0, 0}
#define Transfer_init_zero                       {node_info_req_t_init_zero, node_info_rsp_t_init_zero}
#define node_info_req_t_init_zero                {0, 0, 0, 0}
#define node_info_rsp_t_init_zero                {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define node_info_req_t_timestamp_tag            1
#define node_info_req_t_node_id_tag              2
#define node_info_req_t_temperature_tag          3
#define node_info_req_t_error_code_tag           4
#define node_info_rsp_t_timestamp_tag            1
#define node_info_rsp_t_node_id_tag              2
#define Transfer_node_info_req_tag               1
#define Transfer_node_info_rsp_tag               2

/* Struct field encoding specification for nanopb */
#define Transfer_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, MESSAGE, node_info_req, 1) \
X(a, STATIC, SINGULAR, MESSAGE, node_info_rsp, 2)
#define Transfer_CALLBACK NULL
#define Transfer_DEFAULT NULL
#define Transfer_node_info_req_MSGTYPE node_info_req_t
#define Transfer_node_info_rsp_MSGTYPE node_info_rsp_t

#define node_info_req_t_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT64, timestamp, 1) \
X(a, STATIC, SINGULAR, INT32, node_id, 2) \
X(a, STATIC, SINGULAR, FLOAT, temperature, 3) \
X(a, STATIC, SINGULAR, INT32, error_code, 4)
#define node_info_req_t_CALLBACK NULL
#define node_info_req_t_DEFAULT NULL

#define node_info_rsp_t_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, INT64, timestamp, 1) \
X(a, STATIC, SINGULAR, INT32, node_id, 2)
#define node_info_rsp_t_CALLBACK NULL
#define node_info_rsp_t_DEFAULT NULL

extern const pb_msgdesc_t Transfer_msg;
extern const pb_msgdesc_t node_info_req_t_msg;
extern const pb_msgdesc_t node_info_rsp_t_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Transfer_fields &Transfer_msg
#define node_info_req_t_fields &node_info_req_t_msg
#define node_info_rsp_t_fields &node_info_rsp_t_msg

/* Maximum encoded size of messages (where known) */
#define Transfer_size                            64
#define node_info_req_t_size                     38
#define node_info_rsp_t_size                     22

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
